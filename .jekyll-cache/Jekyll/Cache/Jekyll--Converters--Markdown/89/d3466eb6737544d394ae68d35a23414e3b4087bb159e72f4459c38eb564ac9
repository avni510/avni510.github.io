I"‚<!--
* allow the program to execute sequential actions or multiple actions at once 
* context of execution
* threads share memory with other threads in the same process 
* you can context-switch away form it and then back and it will resume running where it was
* has a lifetime
* consists of a program counter, a stack, and a set of registers
* program counter keeps track of which instruction to execute next
* registers which hold its current working variables 
* stack contains the execution history
* thread then feeds into a scheduler (which switches back and forth between the threads) and then feeds those instructions to the CPU
-->
:ET